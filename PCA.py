# -*- coding: utf-8 -*-
"""

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Rdd3Frkq1IQOTK5F2_yHYCL4mCrjS5gm"""



import numpy as np
import pandas as pd
from sklearn.decomposition import PCA
from sklearn import preprocessing
from sklearn.preprocessing import LabelEncoder
import matplotlib.pyplot as plt

data = pd.read_csv("/content/drive/MyDrive/ml dataset/Iris.csv")

data.head()

le = preprocessing.LabelEncoder()

SeapalLen_encoded = le.fit_transform(data.SepalLengthCm)
SepalWid_encoded = le.fit_transform(data.SepalWidthCm)
PetalLen_encoded = le.fit_transform(data.PetalLengthCm)
PetalWid_encoded = le.fit_transform(data.PetalWidthCm)
label = le.fit_transform(data.Species)

print("SepalLengthCm attribute after encoding:",SeapalLen_encoded)
print("SepalWidthCm attribute after encoding:",SepalWid_encoded)
print("PetalLengthCm attribute after encoding:",PetalLen_encoded)
print("PetalWidthCm attribute after encoding:",PetalWid_encoded)
print("Species attribute after encoding:",label)

features = []

for i in range(len(SeapalLen_encoded)):

  features.append([SeapalLen_encoded[i],SepalWid_encoded[i],PetalLen_encoded[i],PetalWid_encoded[i]])

print(features)

pca = PCA(n_components=2)

extracted_features = pca.fit_transform(features)

print(extracted_features)

plt.scatter(extracted_features[0],extracted_features[1])
plt.xlabel("extracted_features")
plt.ylabel("features")
plt.title("Principle Component analysis")
plt.show()